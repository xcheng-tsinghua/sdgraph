
cd /opt/data/private/networks/sdgraph/ && conda activate dp

## 同步到云端
# 查看当前状态
git statusconda activate dp

# 将修改添加到暂存区
git add .

# 将更改信息暂存到本地
git commit -m "change"

# 推送到远程仓库
git push origin main


git status && git add . && git commit -m "change" && git push


## 同步到本地
git pull origin main

# 强制同步到本地
git reset --hard
git pull origin main


# 删除已同步的文件
# 对于目录
git rm --cached -r ${directory}

# 对于文件
git rm --cached ${file}



## 查看 nohup 的进程输出
tail -f nohup.out

## 查看 nohup 的进程
ps -ef | grep python

nohup 末尾添加该命令可以指定log文件
> out.log 2>&1 &


## 服务器训练
nohup python train_cls.py --bs=32 --local=False

F:\Program Files\Agent\Media\WebServerRoot\Media\video\UPLNX\


python train_cls_cp.py --model=GCN3D --save_str=GCN3D_cp_50 --prism_angle=50 && python train_cls_cp.py --model=GCN3D --save_str=GCN3D_cp_60 --prism_angle=60 && python train_cls_cp.py --model=GCN3D --save_str=GCN3D_cp_70 --prism_angle=70 && python train_cls_cp.py --model=GCN3D --save_str=GCN3D_cp_80 --prism_angle=80 && python train_cls_cp.py --model=GCN3D --save_str=GCN3D_cp_82 --prism_angle=82 && python train_cls_cp.py --model=GCN3D --save_str=GCN3D_cp_85 --prism_angle=85 && python train_cls_cp.py --model=GCN3D --save_str=GCN3D_cp_87 --prism_angle=87 && python train_cls_cp.py --model=GCN3D --save_str=GCN3D_cp_89 --prism_angle=89

python train_cls_cp.py --model=DGCNN --save_str=DGCNN_cp_50 --prism_angle=50 && python train_cls_cp.py --model=DGCNN --save_str=DGCNN_cp_60 --prism_angle=60 && python train_cls_cp.py --model=DGCNN --save_str=DGCNN_cp_70 --prism_angle=70 && python train_cls_cp.py --model=DGCNN --save_str=DGCNN_cp_80 --prism_angle=80 && python train_cls_cp.py --model=DGCNN --save_str=DGCNN_cp_82 --prism_angle=82 && python train_cls_cp.py --model=DGCNN --save_str=DGCNN_cp_85 --prism_angle=85 && python train_cls_cp.py --model=DGCNN --save_str=DGCNN_cp_87 --prism_angle=87 && python train_cls_cp.py --model=DGCNN --save_str=DGCNN_cp_89 --prism_angle=89

python train_cls_cp.py --model=PointNet --save_str=PointNet_cp_50 --prism_angle=50 && python train_cls_cp.py --model=PointNet --save_str=PointNet_cp_60 --prism_angle=60 && python train_cls_cp.py --model=PointNet --save_str=PointNet_cp_70 --prism_angle=70 && python train_cls_cp.py --model=PointNet --save_str=PointNet_cp_80 --prism_angle=80 && python train_cls_cp.py --model=PointNet --save_str=PointNet_cp_82 --prism_angle=82 && python train_cls_cp.py --model=PointNet --save_str=PointNet_cp_85 --prism_angle=85 && python train_cls_cp.py --model=PointNet --save_str=PointNet_cp_87 --prism_angle=87 && python train_cls_cp.py --model=PointNet --save_str=PointNet_cp_89 --prism_angle=89

python train_cls_cp.py --model=PointConv --save_str=PointConv_cp_50 --prism_angle=50 && python train_cls_cp.py --model=PointConv --save_str=PointConv_cp_60 --prism_angle=60 && python train_cls_cp.py --model=PointConv --save_str=PointConv_cp_70 --prism_angle=70 && python train_cls_cp.py --model=PointConv --save_str=PointConv_cp_80 --prism_angle=80 && python train_cls_cp.py --model=PointConv --save_str=PointConv_cp_82 --prism_angle=82 && python train_cls_cp.py --model=PointConv --save_str=PointConv_cp_85 --prism_angle=85 && python train_cls_cp.py --model=PointConv --save_str=PointConv_cp_87 --prism_angle=87 && python train_cls_cp.py --model=PointConv --save_str=PointConv_cp_89 --prism_angle=89

python train_cls_cp.py --bs=280 --model=PointCNN --save_str=PointCNN_cp_50 --prism_angle=50 && python train_cls_cp.py --bs=280 --model=PointCNN --save_str=PointCNN_cp_60 --prism_angle=60 && python train_cls_cp.py --bs=280 --model=PointCNN --save_str=PointCNN_cp_70 --prism_angle=70 && python train_cls_cp.py --bs=280 --model=PointCNN --save_str=PointCNN_cp_80 --prism_angle=80 && python train_cls_cp.py --bs=280 --model=PointCNN --save_str=PointCNN_cp_82 --prism_angle=82 && python train_cls_cp.py --bs=280 --model=PointCNN --save_str=PointCNN_cp_85 --prism_angle=85 && python train_cls_cp.py --bs=280 --model=PointCNN --save_str=PointCNN_cp_87 --prism_angle=87 && python train_cls_cp.py --bs=280 --model=PointCNN --save_str=PointCNN_cp_89 --prism_angle=89

python train_cls_cp.py --is_load_weight=True --bs=280 --epoch=5 --model=PointCNN --save_str=PointCNN_cp_50 --prism_angle=50 && python train_cls_cp.py --epoch=15 --bs=280 --model=PointCNN --save_str=PointCNN_cp_60 --prism_angle=60 && python train_cls_cp.py --epoch=20 --bs=280 --model=PointCNN --save_str=PointCNN_cp_70 --prism_angle=70 && python train_cls_cp.py --epoch=25 --bs=280 --model=PointCNN --save_str=PointCNN_cp_80 --prism_angle=80 && python train_cls_cp.py --epoch=30 --bs=280 --model=PointCNN --save_str=PointCNN_cp_82 --prism_angle=82 && python train_cls_cp.py --epoch=15 --bs=280 --model=PointCNN --save_str=PointCNN_cp_85 --prism_angle=85 && python train_cls_cp.py --epoch=10 --bs=280 --model=PointCNN --save_str=PointCNN_cp_87 --prism_angle=87 && python train_cls_cp.py --epoch=10 --bs=280 --model=PointCNN --save_str=PointCNN_cp_89 --prism_angle=89

---
python train_cls_cp.py --bs=10 --model=PPFNet --save_str=PPFNet_cp_50 --prism_angle=50 && python train_cls_cp.py --bs=10 --model=PPFNet --save_str=PPFNet_cp_60 --prism_angle=60 && python train_cls_cp.py --bs=10 --model=PPFNet --save_str=PPFNet_cp_70 --prism_angle=70 && python train_cls_cp.py --bs=10 --model=PPFNet --save_str=PPFNet_cp_80 --prism_angle=80 && python train_cls_cp.py --bs=10 --model=PPFNet --save_str=PPFNet_cp_82 --prism_angle=82 && python train_cls_cp.py --bs=10 --model=PPFNet --save_str=PPFNet_cp_85 --prism_angle=85 && python train_cls_cp.py --bs=10 --model=PPFNet --save_str=PPFNet_cp_87 --prism_angle=87 && python train_cls_cp.py --bs=10 --model=PPFNet --save_str=PPFNet_cp_89 --prism_angle=89


python train_cls_cp.py --bs=100 --model=PPFNet --save_str=N_PPFNet_cp_50 --prism_angle=50 && python train_cls_cp.py --bs=100 --model=PPFNet --save_str=N_PPFNet_cp_60 --prism_angle=60 && python train_cls_cp.py --bs=100 --model=PPFNet --save_str=N_PPFNet_cp_70 --prism_angle=70 && python train_cls_cp.py --bs=100 --model=PPFNet --save_str=N_PPFNet_cp_80 --prism_angle=80 && python train_cls_cp.py --bs=100 --model=PPFNet --save_str=N_PPFNet_cp_82 --prism_angle=82 && python train_cls_cp.py --bs=100 --model=PPFNet --save_str=N_PPFNet_cp_85 --prism_angle=85 && python train_cls_cp.py --bs=100 --model=PPFNet --save_str=N_PPFNet_cp_87 --prism_angle=87 && python train_cls_cp.py --bs=100 --model=PPFNet --save_str=N_PPFNet_cp_89 --prism_angle=89



# 旋转训练
python eval_rot_cls_o.py --model=GCN3D --save_str=rot_GCN3D_45 --rotate=45 && python eval_rot_cls_o.py --model=GCN3D --save_str=rot_GCN3D_90 --rotate=90 && python eval_rot_cls_o.py --model=GCN3D --save_str=rot_GCN3D_135 --rotate=135 && python eval_rot_cls_o.py --model=GCN3D --save_str=rot_GCN3D_180 --rotate=180

python eval_rot_cls_o.py --model=DGCNN --save_str=rot_DGCNN_45 --rotate=45 && python eval_rot_cls_o.py --model=DGCNN --save_str=rot_DGCNN_90 --rotate=90 && python eval_rot_cls_o.py --model=DGCNN --save_str=rot_DGCNN_135 --rotate=135 && python eval_rot_cls_o.py --model=DGCNN --save_str=rot_DGCNN_180 --rotate=180

python eval_rot_cls_o.py --model=PointNet --save_str=rot_PointNet_45 --rotate=45 && python eval_rot_cls_o.py --model=PointNet --save_str=rot_PointNet_90 --rotate=90 && python eval_rot_cls_o.py --model=PointNet --save_str=rot_PointNet_135 --rotate=135 && python eval_rot_cls_o.py --model=PointNet --save_str=rot_PointNet_180 --rotate=180

python eval_rot_cls_o.py --model=PointNet2 --save_str=rot_PointNet2_45 --rotate=45 && python eval_rot_cls_o.py --model=PointNet2 --save_str=rot_PointNet2_90 --rotate=90 && python eval_rot_cls_o.py --model=PointNet2 --save_str=rot_PointNet2_135 --rotate=135 && python eval_rot_cls_o.py --model=PointNet2 --save_str=rot_PointNet2_180 --rotate=180

python eval_rot_cls_o.py --model=PointConv --save_str=rot_PointConv_45 --rotate=45 && python eval_rot_cls_o.py --model=PointConv --save_str=rot_PointConv_90 --rotate=90 && python eval_rot_cls_o.py --model=PointConv --save_str=rot_PointConv_135 --rotate=135 && python eval_rot_cls_o.py --model=PointConv --save_str=rot_PointConv_180 --rotate=180

python eval_rot_cls_o.py --bs=280 --model=PointCNN --save_str=rot_PointCNN_45 --rotate=45 && python eval_rot_cls_o.py --bs=280 --model=PointCNN --save_str=rot_PointCNN_90 --rotate=90 && python eval_rot_cls_o.py --bs=280 --model=PointCNN --save_str=rot_PointCNN_135 --rotate=135 && python eval_rot_cls_o.py --bs=280 --model=PointCNN --save_str=rot_PointCNN_180 --rotate=180

---
python eval_rot_cls_o.py --bs=100 --model=PPFNet --save_str=rot_PPFNet_0 --rotate=0 && python eval_rot_cls_o.py --bs=100 --model=PPFNet --save_str=rot_PPFNet_45 --rotate=45 && python eval_rot_cls_o.py --bs=100 --model=PPFNet --save_str=rot_PPFNet_90 --rotate=90 && python eval_rot_cls_o.py --bs=100 --model=PPFNet --save_str=rot_PPFNet_135 --rotate=135 && python eval_rot_cls_o.py --bs=100 --model=PPFNet --save_str=rot_PPFNet_180 --rotate=180



python eval_rot_cls_o.py --model=GCN3D --save_str=rot_GCN3D_0 &&
python eval_rot_cls_o.py --model=DGCNN --save_str=rot_DGCNN_0 &&
python eval_rot_cls_o.py --model=PointNet --save_str=rot_PointNet_0 &&
python eval_rot_cls_o.py --model=PointNet2 --save_str=rot_PointNet2_0 &&
python eval_rot_cls_o.py --model=PointConv --save_str=rot_PointConv_0 &&
python eval_rot_cls_o.py --bs=10 --model=PPFNet --save_str=rot_PPFNet_0


python eval_rot_cls_o.py --model=GCN3D --save_str=rot_GCN3D_0 --is_load_weight=True && python eval_rot_cls_o.py --model=DGCNN --save_str=rot_DGCNN_0

python eval_rot_cls_o.py --model=PointNet --save_str=rot_PointNet_0 && python eval_rot_cls_o.py --model=PointNet2 --save_str=rot_PointNet2_0 && python eval_rot_cls_o.py --model=PointConv --save_str=rot_PointConv_0 && python eval_rot_cls_o.py --bs=10 --model=PPFNet --save_str=rot_PPFNet_0

-----
python train_cls_with_cst.py --save_str=pcst_GCN3D --model=GCN3D --is_use_pred_addattr=True && python train_cls_with_cst.py --save_str=pcst_PointNet2 --model=PointNet2 --is_use_pred_addattr=True && python train_cls_with_cst.py --save_str=lcst_GCN3D --model=GCN3D --is_use_pred_addattr=False && python train_cls_with_cst.py --save_str=lcst_PointNet2 --model=PointNet2 --is_use_pred_addattr=False


python train_cls_with_cst.py --save_str=pcst_DGCNN --model=DGCNN --is_use_pred_addattr=True && python train_cls_with_cst.py --save_str=pcst_PointNet --model=PointNet --is_use_pred_addattr=True && python train_cls_with_cst.py --save_str=lcst_DGCNN --model=DGCNN --is_use_pred_addattr=False && python train_cls_with_cst.py --save_str=lcst_PointNet --model=PointNet --is_use_pred_addattr=False


------
约束预测

python train_cst_pred.py --model=hpnet --save_str=hpnet && python train_cst_pred.py --model=parsenet --save_str=parsenet

python train_cst_pred.py --model=hpnet --abc_pack=1 --save_str=hpnet_abc && python train_cst_pred.py --model=hpnet --abc_pack=2 --save_str=hpnet_abc && python train_cst_pred.py --model=hpnet --abc_pack=3 --save_str=hpnet_abc

python train_cst_pred.py --abc_pack=1 --model=parsenet --save_str=parsenet_abc && python train_cst_pred.py --abc_pack=2 --model=parsenet --save_str=parsenet_abc && python train_cst_pred.py --abc_pack=3 --model=parsenet --save_str=parsenet_abc


-----
python train_cst_pred.py --abc_pack=4 --model=hpnet --save_str=hpnet_abc && python train_cst_pred.py --abc_pack=5 --model=hpnet --save_str=hpnet_abc && python train_cst_pred.py --abc_pack=6 --model=hpnet --save_str=hpnet_abc && python train_cst_pred.py --abc_pack=7 --model=hpnet --save_str=hpnet_abc && python train_cst_pred.py --abc_pack=8 --model=hpnet --save_str=hpnet_abc && python train_cst_pred.py --abc_pack=9 --model=hpnet --save_str=hpnet_abc && python train_cst_pred.py --abc_pack=10 --model=hpnet --save_str=hpnet_abc && python train_cst_pred.py --abc_pack=11 --model=hpnet --save_str=hpnet_abc && python train_cst_pred.py --abc_pack=12 --model=hpnet --save_str=hpnet_abc
python train_cst_pred.py --abc_pack=4 --model=parsenet --save_str=parsenet_abc && python train_cst_pred.py --abc_pack=5 --model=parsenet --save_str=parsenet_abc && python train_cst_pred.py --abc_pack=6 --model=parsenet --save_str=parsenet_abc && python train_cst_pred.py --abc_pack=7 --model=parsenet --save_str=parsenet_abc && python train_cst_pred.py --abc_pack=8 --model=parsenet --save_str=parsenet_abc && python train_cst_pred.py --abc_pack=9 --model=parsenet --save_str=parsenet_abc && python train_cst_pred.py --abc_pack=10 --model=parsenet --save_str=parsenet_abc && python train_cst_pred.py --abc_pack=11 --model=parsenet --save_str=parsenet_abc && python train_cst_pred.py --abc_pack=12 --model=parsenet --save_str=parsenet_abc




python train_cst_pred.py --abc_pack=4 --model=hpnet --save_str=hpnet_abc && python train_cst_pred.py --abc_pack=4 --model=parsenet --save_str=parsenet_abc && python train_cst_pred.py --abc_pack=5 --model=hpnet --save_str=hpnet_abc && python train_cst_pred.py --abc_pack=5 --model=parsenet --save_str=parsenet_abc && python train_cst_pred.py --abc_pack=6 --model=hpnet --save_str=hpnet_abc && python train_cst_pred.py --abc_pack=6 --model=parsenet --save_str=parsenet_abc



python train_cls_with_cst.py --save_str=pcst_CstNet --model=CstNet --is_use_pred_addattr=True --bs=16
python train_cls_with_cst.py --save_str=lcst_CstNet --model=CstNet --is_use_pred_addattr=False --bs=64

---
测试hpnet和parsenet
python eval_cst_pred.py --model=hpnet --save_str=hpnet_abc
python eval_cst_pred.py --model=parsenet --save_str=parsenet_abc


--
训练cst-pcd
python train_cst_pred.py --model=cstpcd --save_str=cst_pcd_abc25t --abc_pack=21

python train_cst_pred.py --model=cstpcd --save_str=cst_pcd_abc26t --abc_pack=21 --bs=16



invalid stks : occurred zero sketch: /root/my_data/data_set/sketch_cad/sketch_txt/train/Gear/8646fb6b0a7f42bb9d5036995471b6b0_1.txt



4090 GPU
cd Part_2
conda create --name=clipasso python=3.8 -y
conda activate clipasso
conda install pytorch torchvision torchaudio pytorch-cuda=11.8 -c pytorch -c nvidia
conda install -y -c anaconda cmake
conda install -y -c conda-forge ffmpeg
pip install -r requirements.txt
pip install git+https://github.com/facebookresearch/segment-anything.git
git clone https://github.com/BachiLi/diffvg
cd diffvg
git submodule update --init --recursive
python setup.py install
cd ..




  0%|          | 0/414000 [00:00<?, ?it/s]E:\document\DeepLearning\SDGraph\encoders\spline.py:61: UserWarning: resample dist is equal to stroke length, drop this stroke
  warnings.warn('resample dist is equal to stroke length, drop this stroke')
 10%|▉         | 39973/414000 [03:52<30:03, 207.37it/s]error occurred, skip file: D:\document\DeepLearning\DataSet\quickdraw\MGT\train\animal_migration_full\531.txt
 17%|█▋        | 68377/414000 [09:41<1:09:07, 83.34it/s]E:\document\DeepLearning\SDGraph\encoders\spline.py:167: UserWarning: left and right points are too close, return left point
  warnings.warn('left and right points are too close, return left point')
 22%|██▏       | 91407/414000 [14:21<1:17:46, 69.14it/s]error occurred, skip file: D:\document\DeepLearning\DataSet\quickdraw\MGT\train\camouflage_full\92.txt
 66%|██████▌   | 273713/414000 [48:40<25:00, 93.48it/s]error occurred, skip file: D:\document\DeepLearning\DataSet\quickdraw\MGT\train\rain_full\292.txt
 66%|██████▌   | 273968/414000 [48:43<25:08, 92.83it/s]error occurred, skip file: D:\document\DeepLearning\DataSet\quickdraw\MGT\train\rain_full\525.txt
 74%|███████▍  | 305613/414000 [54:28<20:26, 88.34it/s]error occurred, skip file: D:\document\DeepLearning\DataSet\quickdraw\MGT\train\snowflake_full\198.txt
 99%|█████████▊| 408287/414000 [1:13:22<00:56, 100.38it/s]error occurred, skip file: D:\document\DeepLearning\DataSet\quickdraw\MGT\valid\stitches_full\9.txt
100%|██████████| 414000/414000 [1:14:25<00:00, 92.72it/s]



D:\document\DeepLearning\DataSet\quickdraw\MGT_stk_9_stk_pnt_32\train\animal_migration_full （999 文件）
D:\document\DeepLearning\DataSet\quickdraw\MGT_stk_9_stk_pnt_32\train\camouflage_full （999 文件）
D:\document\DeepLearning\DataSet\quickdraw\MGT_stk_9_stk_pnt_32\train\rain_full （998 文件）
D:\document\DeepLearning\DataSet\quickdraw\MGT_stk_9_stk_pnt_32\train\snowflake_full （999 文件）
D:\document\DeepLearning\DataSet\quickdraw\MGT_stk_9_stk_pnt_32\valid\stitches_full （99 文件）

# sketchrnn 生成草图
nohup bash -c 'python sketch_rnn.py --category=apple && python sketch_rnn.py --category=moon && python sketch_rnn.py --category=book && python sketch_rnn.py --category=shark && python sketch_rnn.py --category=angel && python sketch_rnn.py --category=bicycle'

# sdgraph 生成草图
nohup bash -c 'python train_diff.py --category=apple && python train_diff.py --category=moon && python train_diff.py --category=book && python train_diff.py --category=shark && python train_diff.py --category=angel' > out.log 2>&1 &

python train_diff.py --category=apple --epoch=0 &&
python train_diff.py --category=moon --epoch=0 &&
python train_diff.py --category=book --epoch=0 &&
python train_diff.py --category=shark --epoch=0 &&
python train_diff.py --category=bicycle --epoch=0 &&
python train_diff.py --category=angel --epoch=0


python train_diff.py --category=apple --n_skh_gen=1000 --epoch=0 && python train_diff.py --category=moon --n_skh_gen=1000 --epoch=0 && python train_diff.py --category=book --n_skh_gen=1000 --epoch=0 && python train_diff.py --category=shark --n_skh_gen=1000 --epoch=0 && python train_diff.py --category=bicycle --n_skh_gen=1000 --epoch=0 && python train_diff.py --category=angel --n_skh_gen=1000 --epoch=0

# sketchrnn测试笔划时序
nohup bash -c 'python train_cls.py --is_load_weight=False --is_shuffle_stroke=True && python train_cls.py --is_load_weight=False --is_shuffle_stroke=False && python train_cls.py --is_load_weight=False --is_shuffle_stroke=True --model=SketchTransformer && python train_cls.py --is_load_weight=False --is_shuffle_stroke=False --model=SketchTransformer'


# 消融实验
nohup bash -c 'python train_ablation.py --ablation=ABL_SG && python train_ablation.py --ablation=ABL_SG_SS && python train_ablation.py --ablation=ABL_DG && python train_ablation.py --ablation=ABL_DG_PS && python train_ablation.py --ablation=ABL_SG_DG && python train_ablation.py --ablation=ABL_SG_SS_DG && python train_ablation.py --ablation=ABL_SG_DG_PS && python train_ablation.py --ablation=ABL_SG_SS_DG_PS && python train_ablation.py --ablation=ABL_SG_SS_DG_PS_IF'

nohup bash -c 'python train_ablation.py --ablation=ABL_SG_SS_DG && python train_ablation.py --ablation=ABL_SG_DG_PS && python train_ablation.py --ablation=ABL_SG_SS_DG_PS && python train_ablation.py --ablation=ABL_SG_SS_DG_PS_IF'

python train_ablation.py --ablation=ABL_SG && python train_ablation.py --ablation=ABL_SG_SS && python train_ablation.py --ablation=ABL_DG && python train_ablation.py --ablation=ABL_DG_PS && python train_ablation.py --ablation=ABL_SG_DG && python train_ablation.py --ablation=ABL_SG_SS_DG && python train_ablation.py --ablation=ABL_SG_DG_PS && python train_ablation.py --ablation=ABL_SG_SS_DG_PS && python train_ablation.py --ablation=ABL_SG_SS_DG_PS_IF


python train_ablation.py --ablation=EVS_ISI && python train_ablation.py --ablation=EVS_IST





python train_ablation.py --ablation=ABL_SG &&
python train_ablation.py --ablation=ABL_SG_SS &&
python train_ablation.py --ablation=ABL_DG &&
python train_ablation.py --ablation=ABL_DG_PS &&
python train_ablation.py --ablation=ABL_SG_DG &&
python train_ablation.py --ablation=ABL_SG_SS_DG &&
python train_ablation.py --ablation=ABL_SG_DG_PS && python train_ablation.py --ablation=ABL_SG_SS_DG_PS && python train_ablation.py --ablation=ABL_SG_SS_DG_PS_IF


